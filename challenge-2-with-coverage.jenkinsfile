pipeline {
    agent any

    stages {
        stage('Source') {
            steps {
                sh "git clone file:///shared/repo ."
            }
        }
        stage('Build') {
            steps {
                sh "go build main.go"
            }
        }
        stage('Test') {
            steps {
                sh '''
                    set +e
                    go test ./... COVERAGE_PROFILE_ARGUMENT -v > test_output.txt
                    EXIT_CODE=$?
                    go-junit-report < test_output.txt > report.xml
                    HTML_TEST_COVERAGE_COMMAND
                    exit $EXIT_CODE
                ''' 
            }		            
        }
        stage('Package') {
            steps {
                sh "mkdir -p /shared/packages/${BUILD_ID}"
                sh "cp main /shared/packages/${BUILD_ID}/main"
            }
        }
    }
    
    post {
        always {
            junit 'report.xml'
            publishHTML([
                allowMissing: false, 
                alwaysLinkToLastBuild: true, 
                keepAll: true, 
                reportDir: '.', 
                reportFiles: 'coverage.html', 
                reportName: 'Go Test Coverage', 
                reportTitles: 'Go Test Coverage', 
                useWrapperFileDirectly: true]
            )      
            cleanWs()
        }
    }
}